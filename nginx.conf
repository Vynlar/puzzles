user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    #tcp_nopush     on;

    keepalive_timeout 65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # Set the server port
    server {
        listen 80;

        location / {
            root /usr/share/nginx/html;

            # This is due to nginx and the try_files behavior below, it will always
            # try to hit the index as part of try_files.  If I set index as something
            # that doesn't resolve, we don't have to worry about index.html being cached.
            #
            # If frequent updates occur, it's important that index.html not be cached
            # in the browser.  Otherwise the software update will only occur when the
            # cached page expires.  The If-Modified-Since is a better way to handle this
            # for SPAs with frequent updates.
            index unresolvable-file-html.html;

            try_files $uri @index;
        }

        # This seperate location is so the no cache policy only applies to the index and nothing else.
        location @index {
            root /usr/share/nginx/html;
            add_header Cache-Control no-cache;
            expires 0;
            try_files /index.html =404;
        }
    }
}